basePath: /v1
definitions:
  entity.Book:
    properties:
      author:
        type: string
      createDate:
        type: string
      createUserID:
        type: integer
      dateOfIssue:
        type: string
      deleteDate:
        type: string
      deleteFlag:
        type: integer
      deleteUserID:
        type: integer
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      publisher:
        type: string
      updateDate:
        type: string
      updateUserID:
        type: integer
    type: object
  entity.Review:
    properties:
      bookID:
        type: integer
      content:
        type: string
      createDate:
        type: string
      createUserID:
        type: integer
      deleteDate:
        type: string
      deleteFlag:
        type: integer
      deleteUserID:
        type: integer
      id:
        type: integer
      readingDate:
        type: string
      title:
        type: string
      updateDate:
        type: string
      updateUserID:
        type: integer
      userID:
        type: integer
      userName:
        type: string
    type: object
  outputport.BookDetail:
    properties:
      author:
        type: string
      date_of_issue:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      publisher:
        type: string
      reviews:
        items:
          $ref: '#/definitions/outputport.Review'
        type: array
    type: object
  outputport.Comment:
    properties:
      content:
        type: string
      id:
        type: integer
      review_id:
        type: integer
      user_id:
        type: integer
    type: object
  outputport.Review:
    properties:
      content:
        type: string
      id:
        type: integer
      reading_date:
        type: string
      title:
        type: string
      user:
        type: string
    type: object
  outputport.ReviewDetail:
    properties:
      comments:
        items:
          $ref: '#/definitions/outputport.Comment'
        type: array
      content:
        type: string
      id:
        type: integer
      reading_date:
        type: string
      title:
        type: string
      user:
        type: string
    type: object
  outputport.User:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      occupation:
        type: string
    type: object
info:
  contact: {}
  description: 読書●ーターを参考にした下位互換API
  title: bookshelf-api
  version: 0.0.0
paths:
  /book:
    post:
      consumes:
      - application/json
      description: 本の更新
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
      summary: 本の更新
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: 本の削除
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: ""
      summary: 本の削除
    get:
      consumes:
      - application/json
      description: idによる本の取得
      parameters:
      - description: 本のID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Book'
      summary: idによる本の取得
  /book/detail/{id}:
    get:
      consumes:
      - application/json
      description: 本の詳細情報の取得
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.BookDetail'
      summary: 本の詳細情報の取得
  /comment:
    patch:
      consumes:
      - application/json
      description: コメントの更新
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: コメントの更新
    post:
      consumes:
      - application/json
      description: コメントの登録
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.Comment'
      summary: コメントの登録
  /comment/{id}:
    delete:
      consumes:
      - application/json
      description: コメントの削除
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: ""
      summary: コメントの削除
    get:
      consumes:
      - application/json
      description: idによるコメントの取得
      parameters:
      - description: コメントのID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.Comment'
      summary: idによるコメントの取得
  /review:
    patch:
      consumes:
      - application/json
      description: レビューの更新
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Review'
      summary: レビューの更新
    post:
      consumes:
      - application/json
      description: レビューの登録
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.Review'
      summary: レビューの登録
  /review/{id}:
    delete:
      consumes:
      - application/json
      description: レビューの削除
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "202":
          description: ""
      summary: レビューの削除
    get:
      consumes:
      - application/json
      description: idによるレビューの取得
      parameters:
      - description: レビューのID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.Review'
      summary: idによるレビューの取得
  /review/detail/{id}:
    get:
      consumes:
      - application/json
      description: レビュー詳細情報の取得
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.ReviewDetail'
      summary: レビュー詳細情報の取得
  /user/detail/{id}:
    get:
      consumes:
      - application/json
      description: ユーザー情報の取得
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputport.User'
      summary: ユーザー情報の取得
  /users:
    get:
      consumes:
      - application/json
      description: ユーザー情報の全員取得
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/outputport.User'
            type: array
      summary: ユーザー情報の全員取得
  /users/report:
    get:
      consumes:
      - application/json
      description: ユーザー情報全員のスプレッドシート出力
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ユーザー情報全員のスプレッドシート出力
  /version:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: バージョン情報を文字列で返す
swagger: "2.0"
